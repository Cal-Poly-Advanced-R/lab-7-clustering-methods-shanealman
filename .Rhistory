princomp(x)
x = princomp(x)
x$scores
mtcars
princomp(mtcars)
x = princomp(mtcars)
x = x %>% princomp() %>% select(Comp.1, Comp.2)
x = mtcars %>% princomp() %>% select(Comp.1, Comp.2)
x = mtcars %>% princomp() %>% as_tibble %>% select(Comp.1, Comp.2)
x = princomp(mtcars)
x
x$scores[['Princomp1']]
x$scores
x$scores[1:2,]
x$scores[,1:2]
x = x$scores[,1:2]
x[,1]
x[1,]
x
as.matrix(x)
x = as.matrix(x)
x[,1]
x = princomp(mtcaqrs)
x = princomp(mtcars)
x
x = x$scores %>% as_tibble() %>% select(Comp.1, Comp.2)
x
x[,1]
k_means = function(x, centers, PCA = F){
if(PCA == T){
x = princomp(x)
x = x$scores %>% as_tibble() %>% select(Comp.1, Comp.2)
}
k.means = sample_n(x, centers)
ik.means = 0
while(sum((k.means - ik.means)^2) != 0){
ik.means = k.means
tempdf = as.matrix(x)
clust = rep(NA, nrow(tempdf))
dists = rep(NA, nrow(tempdf))
for(i in 1:nrow(tempdf)){
tempdist = as.matrix(dist(rbind(k.means, tempdf[i,])))
tempdist = tempdist[nrow(tempdist), 1:nrow(tempdist)-1]
clust[i] = which.min(tempdist)
dists[i] = min(tempdist)
}
tempdf = cbind(tempdf, clust, dists)
SSE = sum(dists^2)
k.means = cbind(tapply(tempdf[,1], tempdf[,3], mean),
tapply(tempdf[,2], tempdf[,3], mean))
}
return(list('Clustering vector' = tempdf[,3], 'Cluster Means' = k.means, 'Total SSE' = SSE))
}
k_means(mtcasr, 3, PCA = T)
k_means(mtcars, 3, PCA = T)
x
x = select(iris, Petal.Length, Petal.Width)
x
k.means = sample_n(x, 1)
k.menas
k.means
as.matrix(dist(rbind(k.means, tempdf[i,])))
as.matrix(dist(rbind(k.means, x[i,])))
as.matrix(dist(rbind(k.means, x[1,])))
x[1,]
k.means
k.means = sample_n(x, 1)
for(i in 1:nrow(x)){
tempdist = as.matrix(dist(rbind(k.means, x[i,])))
tempdist = tempdist[nrow(tempdist), 1:nrow(tempdist)-1]
clust[i] = which.min(tempdist)
dists[i] = min(tempdist)
}
k.means = sample_n(x, 1)
tempdf = as.matrix(x)
clust = rep(NA, nrow(tempdf))
dists = rep(NA, nrow(tempdf))
for(i in 1:nrow(x)){
tempdist = as.matrix(dist(rbind(k.means, x[i,])))
tempdist = tempdist[nrow(tempdist), 1:nrow(tempdist)-1]
clust[i] = which.min(tempdist)
dists[i] = min(tempdist)
}
dists
sample(x)
sample(x,1)
?sample_n
sample_n(x, 1, weight = dists)
sample_n(x, 1, weight = dists)
sample_n(x, 1, weight = dists)
sample_n(x, 1, weight = dists)
dists
sample_n(x, 1, weight = dists)
sample_n(x, 1, weight = dists)
sample_n(x, 1, weight = dists)
sample_n(x, 1, weight = dists)
sample_n(x, 1, weight = dists)
sample_n(x, 1, weight = dists)
sample_n(x, 1, weight = dists)
sample_n(x, 1, weight = dists)
sample_n(x, 1, weight = dists)
sample_n(x, 1, weight = dists)
sample_n(x, 1, weight = dists)
sample_n(x, 1, weight = dists)
sample_n(x, 1, weight = dists)
sample_n(x, 1, weight = dists)
sample_n(x, 1, weight = dists)
sample_n(x, 1, weight = dists)
sample_n(x, 1, weight = dists)
sample_n(x, 1, weight = dists)
sample_n(x, 1, weight = dists)
sample_n(x, 1, weight = dists)
sample_n(x, 1, weight = dists)
sample_n(x, 10000, weight = dists)
sample_n(x, 10000, weight = dists, replace = T)
a = sample_n(x, 10000, weight = dists, replace = T)
hist(a)
a
ggplot(a) + geom_point(aes(Petal.Length, Petal.Width))
a
hist(a$Petal.Length)
hist(iris$Petal.Length)
hist(a$Petal.Length)
hist(iris$Petal.Length)
hist(a$Petal.Length)
hist(iris$Petal.Length)
a = sample_n(x, 100, weight = dists, replace = T)
hist(a$Petal.Length)
hist(a$Petal.Length)
a = sample_n(x, 100, weight = dists, replace = T)
hist(a$Petal.Length)
hist(a$Petal.Width)
dists = dists^2
a = sample_n(x, 100, weight = dists, replace = T)
hist(a$Petal.Length)
hist(a$Petal.Width)
a = sample_n(x, 1, weight = dists, replace = T)
a
sample_n(x, 1, weight = dists, replace = T)
sample_n(x, 1, weight = dists, replace = T)
sample_n(x, 1, weight = dists, replace = T)
sample_n(x, 1, weight = dists, replace = T)
sample_n(x, 1, weight = dists, replace = T)
sample_n(x, 1, weight = dists, replace = T)
sample_n(x, 1, weight = dists, replace = T)
a = sample_n(x, 50, weight = dists, replace = T)
hist(a)
hist(a$Petal.Length)
b = sample_n(iris$Petal.Length, 50, replace = T)
b = sample_n(x, 50, replace = T)
x
b
hist(b$Petal.Length)
hist(b$Petal.Length)
b = sample_n(x, 50, replace = T)
hist(b$Petal.Length)
b = sample_n(x, 50, replace = T)
hist(b$Petal.Length)
hist(a$Petal.Length)
dists
dists/sum(dists)
dists
weights = dists/sum(dists)
sample_n(x, 1, weight = weights)
sample_n(x, 1, weight = weights)
sample_n(x, 1, weight = weights)
sample_n(x, 1, weight = weights)
sample_n(x, 1, weight = weights)
sample_n(x, 1, weight = weights)
centers = 3
x
k.means = sample_n(x, 1)
tempdf = as.matrix(x)
for(i in 1:centers-1){
dists = rep(NA, nrow(tempdf))
for(i in 1:nrow(tempdf)){
tempdist = as.matrix(dist(rbind(k.means, tempdf[i,])))
tempdist = tempdist[nrow(tempdist), 1:nrow(tempdist)-1]
dists[i] = min(tempdist)
}
weights = dists^2/sum(dists^2)
k.means = c(k.means, sample_n(tempdf, 1, weight = weights))
}
tempdf
k.means = sample_n(x, 1)
for(i in 1:centers-1){
dists = rep(NA, nrow(tempdf))
for(i in 1:nrow(tempdf)){
tempdist = as.matrix(dist(rbind(k.means, tempdf[i,])))
tempdist = tempdist[nrow(tempdist), 1:nrow(tempdist)-1]
dists[i] = min(tempdist)
}
weights = dists^2/sum(dists^2)
k.means = c(k.means, sample_n(tempdf, 1, weight = weights))
}
tempdf
tempdf = as.data.frame(tempdf)
k.means = sample_n(x, 1)
for(i in 1:centers-1){
dists = rep(NA, nrow(tempdf))
for(i in 1:nrow(tempdf)){
tempdist = as.matrix(dist(rbind(k.means, tempdf[i,])))
tempdist = tempdist[nrow(tempdist), 1:nrow(tempdist)-1]
dists[i] = min(tempdist)
}
weights = dists^2/sum(dists^2)
k.means = c(k.means, sample_n(tempdf, 1, weight = weights))
}
k.means = sample_n(x, 1)
tempdf = as.matrix(x)
k.means = sample_n(x, 1)
for(i in 1:centers-1){
tempdf = as.matrix(x)
dists = rep(NA, nrow(tempdf))
for(i in 1:nrow(tempdf)){
tempdist = as.matrix(dist(rbind(k.means, tempdf[i,])))
tempdist = tempdist[nrow(tempdist), 1:nrow(tempdist)-1]
dists[i] = min(tempdist)
}
tempdf = data.frame(tempdf)
weights = dists^2/sum(dists^2)
k.means = c(k.means, sample_n(tempdf, 1, weight = weights))
}
kmeans
k.means
k.means = sample_n(x, 1)
for(i in 1:centers-1){
tempdf = as.matrix(x)
dists = rep(NA, nrow(tempdf))
for(i in 1:nrow(tempdf)){
tempdist = as.matrix(dist(rbind(k.means, tempdf[i,])))
tempdist = tempdist[nrow(tempdist), 1:nrow(tempdist)-1]
dists[i] = min(tempdist)
}
tempdf = data.frame(tempdf)
weights = dists^2/sum(dists^2)
k.means = rbind(k.means, sample_n(tempdf, 1, weight = weights))
}
k.means
centers
k.means = sample_n(x, 1)
k.means
for(i in 1:centers-1){
tempdf = as.matrix(x)
dists = rep(NA, nrow(tempdf))
for(i in 1:nrow(tempdf)){
tempdist = as.matrix(dist(rbind(k.means, tempdf[i,])))
tempdist = tempdist[nrow(tempdist), 1:nrow(tempdist)-1]
dists[i] = min(tempdist)
}
tempdf = data.frame(tempdf)
weights = dists^2/sum(dists^2)
k.means = rbind(k.means, sample_n(tempdf, 1, weight = weights))
}
k.means
k.means = sample_n(x, 1)
k.menas
k.means
for(i in 1:centers-1){
tempdf = as.matrix(x)
dists = rep(NA, nrow(tempdf))
for(i in 1:nrow(tempdf)){
tempdist = as.matrix(dist(rbind(k.means, tempdf[i,])))
tempdist = tempdist[nrow(tempdist), 1:nrow(tempdist)-1]
dists[i] = min(tempdist)
}
tempdf = data.frame(tempdf)
weights = dists^2/sum(dists^2)
k.means = rbind(k.means, sample_n(tempdf, 1, weight = weights))
}
k.means
k.means = sample_n(x, 1)
for(i in 2:centers){
tempdf = as.matrix(x)
dists = rep(NA, nrow(tempdf))
for(i in 1:nrow(tempdf)){
tempdist = as.matrix(dist(rbind(k.means, tempdf[i,])))
tempdist = tempdist[nrow(tempdist), 1:nrow(tempdist)-1]
dists[i] = min(tempdist)
}
tempdf = data.frame(tempdf)
weights = dists^2/sum(dists^2)
k.means = rbind(k.means, sample_n(tempdf, 1, weight = weights))
}
k.means
k.means = sample_n(x, 1)
k.means
for(i in 2:centers){
tempdf = as.matrix(x)
dists = rep(NA, nrow(tempdf))
for(i in 1:nrow(tempdf)){
tempdist = as.matrix(dist(rbind(k.means, tempdf[i,])))
tempdist = tempdist[nrow(tempdist), 1:nrow(tempdist)-1]
dists[i] = min(tempdist)
}
tempdf = data.frame(tempdf)
weights = dists^2/sum(dists^2)
k.means = rbind(k.means, sample_n(tempdf, 1, weight = weights))
}
k.means
x
sample_n(x, 3)
k.means = sample_n(x, 1)
for(i in 2:centers){
tempdf = as.matrix(x)
dists = rep(NA, nrow(tempdf))
for(i in 1:nrow(tempdf)){
tempdist = as.matrix(dist(rbind(k.means, tempdf[i,])))
tempdist = tempdist[nrow(tempdist), 1:nrow(tempdist)-1]
dists[i] = min(tempdist)
}
tempdf = data.frame(tempdf)
weights = dists^2/sum(dists^2)
k.means = rbind(k.means, sample_n(tempdf, 1, weight = weights))
}
k.means
sample_n(x, 3)
k_means = function(x, centers, PCA = F, plus.plus = F){
if(PCA == T){
x = princomp(x)
x = x$scores %>% as_tibble() %>% select(Comp.1, Comp.2)
}
k.means = sample_n(x, centers)
ik.means = 0
if(plus.plus = T){
k.means = sample_n(x, 1)
for(i in 2:centers){
tempdf = as.matrix(x)
dists = rep(NA, nrow(tempdf))
for(i in 1:nrow(tempdf)){
tempdist = as.matrix(dist(rbind(k.means, tempdf[i,])))
tempdist = tempdist[nrow(tempdist), 1:nrow(tempdist)-1]
dists[i] = min(tempdist)
}
tempdf = data.frame(tempdf)
weights = dists^2/sum(dists^2)
k.means = rbind(k.means, sample_n(tempdf, 1, weight = weights))
}
}
while(sum((k.means - ik.means)^2) != 0){
ik.means = k.means
tempdf = as.matrix(x)
clust = rep(NA, nrow(tempdf))
dists = rep(NA, nrow(tempdf))
for(i in 1:nrow(tempdf)){
tempdist = as.matrix(dist(rbind(k.means, tempdf[i,])))
tempdist = tempdist[nrow(tempdist), 1:nrow(tempdist)-1]
clust[i] = which.min(tempdist)
dists[i] = min(tempdist)
}
tempdf = cbind(tempdf, clust, dists)
SSE = sum(dists^2)
k.means = cbind(tapply(tempdf[,1], tempdf[,3], mean),
tapply(tempdf[,2], tempdf[,3], mean))
}
return(list('Clustering vector' = tempdf[,3], 'Cluster Means' = k.means, 'Total SSE' = SSE))
}
k_means = function(x, centers, PCA = F, plus.plus = F){
if(PCA == T){
x = princomp(x)
x = x$scores %>% as_tibble() %>% select(Comp.1, Comp.2)
}
k.means = sample_n(x, centers)
ik.means = 0
if(plus.plus = T){
k.means = sample_n(x, 1)
for(i in 2:centers){
tempdf = as.matrix(x)
dists = rep(NA, nrow(tempdf))
for(i in 1:nrow(tempdf)){
tempdist = as.matrix(dist(rbind(k.means, tempdf[i,])))
tempdist = tempdist[nrow(tempdist), 1:nrow(tempdist)-1]
dists[i] = min(tempdist)
}
tempdf = data.frame(tempdf)
weights = dists^2/sum(dists^2)
k.means = rbind(k.means, sample_n(tempdf, 1, weight = weights))
}
}
while(sum((k.means - ik.means)^2) != 0){
ik.means = k.means
tempdf = as.matrix(x)
clust = rep(NA, nrow(tempdf))
dists = rep(NA, nrow(tempdf))
for(i in 1:nrow(tempdf)){
tempdist = as.matrix(dist(rbind(k.means, tempdf[i,])))
tempdist = tempdist[nrow(tempdist), 1:nrow(tempdist)-1]
clust[i] = which.min(tempdist)
dists[i] = min(tempdist)
}
tempdf = cbind(tempdf, clust, dists)
SSE = sum(dists^2)
k.means = cbind(tapply(tempdf[,1], tempdf[,3], mean),
tapply(tempdf[,2], tempdf[,3], mean))
}
return(list('Clustering vector' = tempdf[,3], 'Cluster Means' = k.means, 'Total SSE' = SSE))
}
k_means = function(x, centers, PCA = F, plus.plus = F){
if(PCA == T){
x = princomp(x)
x = x$scores %>% as_tibble() %>% select(Comp.1, Comp.2)
}
k.means = sample_n(x, centers)
ik.means = 0
if(plus.plus == T){
k.means = sample_n(x, 1)
for(i in 2:centers){
tempdf = as.matrix(x)
dists = rep(NA, nrow(tempdf))
for(i in 1:nrow(tempdf)){
tempdist = as.matrix(dist(rbind(k.means, tempdf[i,])))
tempdist = tempdist[nrow(tempdist), 1:nrow(tempdist)-1]
dists[i] = min(tempdist)
}
tempdf = data.frame(tempdf)
weights = dists^2/sum(dists^2)
k.means = rbind(k.means, sample_n(tempdf, 1, weight = weights))
}
}
while(sum((k.means - ik.means)^2) != 0){
ik.means = k.means
tempdf = as.matrix(x)
clust = rep(NA, nrow(tempdf))
dists = rep(NA, nrow(tempdf))
for(i in 1:nrow(tempdf)){
tempdist = as.matrix(dist(rbind(k.means, tempdf[i,])))
tempdist = tempdist[nrow(tempdist), 1:nrow(tempdist)-1]
clust[i] = which.min(tempdist)
dists[i] = min(tempdist)
}
tempdf = cbind(tempdf, clust, dists)
SSE = sum(dists^2)
k.means = cbind(tapply(tempdf[,1], tempdf[,3], mean),
tapply(tempdf[,2], tempdf[,3], mean))
}
return(list('Clustering vector' = tempdf[,3], 'Cluster Means' = k.means, 'Total SSE' = SSE))
}
k_means(mtcars, 3, T, T)
k_means(mtcars, 3, T)
x
x = select(iris, Sepal.Length, Sepal.Width)
x
ggplot(x) + geom_point(Sepal.Length, Sepal.Width)
ggplot(x) + geom_point(aes(Sepal.Length, Sepal.Width))
x = select(iris, Petal.Length, Petal.Width)
x
k_means(x, 3, plus.plus = T)
k_means(x, 3, plus.plus = F)
k_means(x, 3, plus.plus = T)
k_means(x, 3, plus.plus = F)
k_means(x, 3, plus.plus = T)
k_means(x, 3, plus.plus = T)
k_means(x, 3, plus.plus = T)
k_means(x, 3, plus.plus = T)
k_means(x, 3, plus.plus = T)
k_means(x, 3, plus.plus = T)
k_means(mtcars, 3, T, T)
k_means(mtcars, 3, T)
y = princomp(mtcars)
y = y$scores %>% as_tibble() %>% select(Comp.1, Comp.2)
y
kmeans(y, 3)
d = kmeans(y, 3)
d$tot.withinss
k_means = function(x, centers, PCA = F, plus.plus = F){
if(PCA == T){
x = princomp(x)
x = x$scores %>% as_tibble() %>% select(Comp.1, Comp.2)
}
k.means = sample_n(x, centers)
ik.means = 0
if(plus.plus == T){
k.means = sample_n(x, 1)
for(i in 2:centers){
tempdf = as.matrix(x)
dists = rep(NA, nrow(tempdf))
for(i in 1:nrow(tempdf)){
tempdist = as.matrix(dist(rbind(k.means, tempdf[i,])))
tempdist = tempdist[nrow(tempdist), 1:nrow(tempdist)-1]
dists[i] = min(tempdist)
}
tempdf = data.frame(tempdf)
weights = dists^2/sum(dists^2)
k.means = rbind(k.means, sample_n(tempdf, 1, weight = weights))
}
}
while(sum((k.means - ik.means)^2) != 0){
ik.means = k.means
tempdf = as.matrix(x)
clust = rep(NA, nrow(tempdf))
dists = rep(NA, nrow(tempdf))
for(i in 1:nrow(tempdf)){
tempdist = as.matrix(dist(rbind(k.means, tempdf[i,])))
tempdist = tempdist[nrow(tempdist), 1:nrow(tempdist)-1]
clust[i] = which.min(tempdist)
dists[i] = min(tempdist)
}
tempdf = cbind(tempdf, clust, dists)
SSE = sum(dists^2)
k.means = cbind(tapply(tempdf[,1], tempdf[,3], mean),
tapply(tempdf[,2], tempdf[,3], mean))
}
return(list('Clustering vector' = tempdf[,3], 'Cluster Means' = k.means, 'Total SSE' = SSE))
}
x = select(iris, Petal.Length, Petal.Width)
k_means(x, 5, plus.plus = T)
k_means(x, 5, plus.plus = F)
?kmeans
usethis()
library(usethis)
install.packages('ggdendro')
install.packages('ggdendro')
